// --- —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è ---
let today = new Date().toISOString().split("T")[0];
let goal = parseInt(localStorage.getItem("goal")) || 2000;
let current = JSON.parse(localStorage.getItem("current")) || {};
let reminder = parseInt(localStorage.getItem("reminder")) || 0;

if (!current[today]) current[today] = 0;
let reminderInterval = null;

// --- –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≥–æ–ª–æ–≤–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ ---
function updateUI() {
  if (!document.getElementById("goal")) return; // —è–∫—â–æ –º–∏ –Ω–µ –Ω–∞ index.html

  document.getElementById("goal").innerText = goal;
  document.getElementById("currentInfo").innerText =
    `–í–∏–ø–∏—Ç–æ: ${current[today]} –º–ª —ñ–∑ ${goal} –º–ª`;

  let percent = Math.min(100, Math.round((current[today] / goal) * 100));
  document.getElementById("progress").style.width = percent + "%";
  document.getElementById("percentBox").innerText = percent + "%";

  document.getElementById("date").innerText = today;

  // —ñ—Å—Ç–æ—Ä—ñ—è
  let historyList = document.getElementById("historyList");
  historyList.innerHTML = "";
  let keys = Object.keys(current).slice(-7); // –æ—Å—Ç–∞–Ω–Ω—ñ 7 –¥–Ω—ñ–≤
  keys.forEach(d => {
    let li = document.createElement("li");
    li.innerText = `${d}: ${current[d]} –º–ª`;
    historyList.appendChild(li);
  });

  // —è–∫—â–æ —Ü—ñ–ª—å –≤–∏–∫–æ–Ω–∞–Ω–∞ ‚Üí –∑—É–ø–∏–Ω—è—î–º–æ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è
  if (percent >= 100) {
    stopReminders();
  } else {
    startReminders();
  }
}

// --- –¥–æ–¥–∞—Ç–∏ –≤–æ–¥—É ---
function addWater() {
  let amount = parseInt(document.getElementById("waterInput").value) || 0;
  if (amount > 0) {
    current[today] += amount;
    localStorage.setItem("current", JSON.stringify(current));
    updateUI();
  }
}

// --- –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ---
function saveSettings() {
  goal = parseInt(document.getElementById("goalInput").value) || goal;
  current[today] = parseInt(document.getElementById("currentInput").value) || current[today];
  reminder = parseInt(document.getElementById("reminderInput").value) || reminder;

  localStorage.setItem("goal", goal);
  localStorage.setItem("current", JSON.stringify(current));
  localStorage.setItem("reminder", reminder);

  alert("–ó–±–µ—Ä–µ–∂–µ–Ω–æ ‚úÖ");
  updateUI();
}

// --- –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å ---
function loadSettings() {
  if (!document.getElementById("goalInput")) return; // —è–∫—â–æ –Ω–µ –Ω–∞ settings.html

  document.getElementById("goalInput").value = goal;
  document.getElementById("currentInput").value = current[today];
  document.getElementById("reminderInput").value = reminder;
}

// --- –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è ---
function startReminders() {
  if (reminder > 0 && document.getElementById("goal")) { 
    if (reminderInterval) clearInterval(reminderInterval);

    reminderInterval = setInterval(() => {
      let percent = Math.min(100, Math.round((current[today] / goal) * 100));
      if (percent >= 100) {
        stopReminders();
        return;
      }

      if (Notification.permission === "granted") {
        new Notification("üíß –í–∏–ø–∏–π –≤–æ–¥–∏!");
      } else {
        alert("üíß –í–∏–ø–∏–π –≤–æ–¥–∏!");
      }
    }, reminder * 60 * 1000);
  }
}

function stopReminders() {
  if (reminderInterval) {
    clearInterval(reminderInterval);
    reminderInterval = null;
    console.log("‚èπ –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –∑—É–ø–∏–Ω–µ–Ω—ñ (—Ü—ñ–ª—å –¥–æ—Å—è–≥–Ω—É—Ç–∞)");
  }
}

// --- –î–æ–∑–≤—ñ–ª –Ω–∞ –Ω–æ—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó ---
if ("Notification" in window) {
  if (Notification.permission === "default") {
    Notification.requestPermission();
  }
}

// --- –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ ---
updateUI();
loadSettings();
startReminders();
